require 'socket'
require 'timeout'
require 'thread'

class Connect
  def initialize(host)
    @host = host
  end
  
  def check
    result = Hash.new
    host = @host.select { |h| h.match(/((\d+(\.|:)){4}\d{1,5})/) }
    #host = @host.scan(/((\d\d?\d?(\.|:)){4}\d{1,5})/)
    threads = []
    host.each do |h|
      h = h.split(" ")[0] if h.match(/\s/)
      threads << Thread.new {
      h = h.sub(/https?:\/\//, "").chomp.strip
      ip, port = h.split(":") #split the string to get the ip and the port
      begin
        Timeout::timeout(5) do #5 seconds should be enough to determine whether the destination will connect
          target = TCPSocket.new(ip, port) #create a socket connection out of the ip and the port
          result[h] = "- Up"
        end
      rescue Errno::ECONNREFUSED, Errno::EHOSTUNREACH, Errno::ENETUNREACH, Timeout::Error #false if failed to connect
        result[h] = "- Offline"
      rescue SocketError
        result[h] = "- Not Supported"
      end
    }
    end
    threads.each { |thr| thr.join }
    return result.sort_by {|k,v| v}
  end
end
